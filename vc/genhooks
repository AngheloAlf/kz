#!/bin/bash

elf="$1"
bin="$2"
if [ -z "$elf" ]; then
    echo usage: \`genhooks \<elf\> \<bin\>\`
fi

if [ -z "$bin" ]; then
    echo usage: \`genhooks \<elf\> \<bin\>\`
fi

vcaddr()
{
    printf "#include \"src/vc.h\"\n$1" | powerpc-eabi-cpp - $CPPFLAGS | tail -n 1 | sed -e s/^M//g
}

vcsym()
{
    echo "0x`powerpc-eabi-nm "$elf" | sed -e s/^M//g | grep -w "$1" | sed -E -e "s/([0-9A-Fa-f]{8})?([0-9A-Fa-f]{8}).*/\2/"`"
}

vcbranch()
{
    dest="$(vcsym "$1")"
    dest="$(printf "%d" "$dest")"
    origin="$(vcaddr "$2")"
    origin="$(printf "%d" "$origin")"
    val=$(expr "$dest" - "$origin")
    printf "0x%08x" "$val"    
}

gzi32()
{
    addr2="$(printf "%d" "$1")"
    addr2="$(expr "$addr2" - 2147512512 + 9696)" # addr - 800070c0 + 25e0 should probably actually read the dol here, but lazy
    printf "0304 %08x %s\n" "$addr2" "$2"
}

genhook()
{
    addr="$(printf "%d" "$1")"
    tmp="$(mktemp)"
    echo "$2" | powerpc-eabi-as -mregnames - -o "$tmp"
    powerpc-eabi-readelf -x .text "$tmp" | grep "0x[0-9A-Fa-f]\{8\}" | grep -o " [0-9A-Fa-f]\{8\}" |
    while read -r line; do
        gzi32 "$addr" "$line"
        addr=$(expr "$addr" + 4)
    done
    rm -f "$tmp"
}

echo "0000 00000000 00000001"
genhook "$(vcaddr treeInitNode_addr)" "b $(vcbranch treeInitNode treeInitNode_addr);"
genhook "$(vcaddr cpuHeapTake_addr)" "b $(vcbranch cpuHeapTake cpuHeapTake_addr);"
genhook "$(vcaddr treeInsert_addr)" "b $(vcbranch treeInsert treeInsert_addr);"
genhook "$(vcaddr treeInit_addr)" "b $(vcbranch treeInit treeInit_addr);"
genhook "$(vcaddr treeSearchNode_addr)" "b $(vcbranch treeSearchNode treeSearchNode_addr);"
binsiz="$(stat --printf="%s" "$bin")"
initaddr="$(vcsym _start)"
initaddr=$(printf "%d" "$initaddr")
heapaddr=$(expr "$initaddr" + "$binsiz")
heapaddr=$(printf "0x%08x" "$heapaddr")
genhook "$(vcaddr heap_size_hook_addr)" "lis r3, "$heapaddr"@h;addi r3, r3, "$heapaddr"@l;"